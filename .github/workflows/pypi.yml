name: Build Wheels + PyPI deploy

on:
  workflow_dispatch:
    inputs:
      deploy_to_testpypi:
        description: "Whether the build should be deployed to test.pypi.org"
        required: true
        default: "false"
      deploy_to_pypi:
        description: "Whether the build should be deployed to pypi.org"
        required: true
        default: "true"

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: "x86_64"
          - os: windows-2022
            arch: "AMD64"
          - os: macos-11
            arch: "x86_64"

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Build wheels (arch=${{ matrix.arch }})
      uses: pypa/cibuildwheel@v2.14
      env:
        CIBW_ARCHS: "${{ matrix.arch }}"
        CIBW_BEFORE_BUILD: "cd {project} && pip install cmake pybind11[global] numpy && bash .github/workflows/build_wheel_deps.sh"
        CIBW_BEFORE_BUILD_WINDOWS: "cd {project} && pip install cmake pybind11[global] numpy && bash .github/workflows/build_wheel_deps.sh && bash .github/workflows/build_wheel_deps_windows.sh"
        CIBW_TEST_COMMAND_LINUX: "cd {project} && python -m unittest discover src/python/test -v"
        CIBW_TEST_COMMAND_MACOS: "cd {project} && python -m unittest discover src/python/test -v"
        CIBW_ENVIRONMENT: 'CMAKE_ARGS="-DCMAKE_PREFIX_PATH=./inst -DCMAKE_OSX_DEPLOYMENT_TARGET=10.15"'

    - uses: actions/upload-artifact@v3
      with:
        path: ./wheelhouse/*.whl

  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Build SDist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: dist/*.tar.gz

  upload_testpypi:
    needs: [build-sdist, build-wheels]
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        if: github.event.inputs.deploy_to_testpypi == 'true'
        with:
          repository_url: https://test.pypi.org/legacy/

  upload_pypi:
    needs: [build-sdist, build-wheels, upload_testpypi]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        if: github.event.inputs.deploy_to_pypi == 'true'
